===============================
The ``1-my_list`` module
===============================
print the list in sorted order
============================
Using ``1-my_list``
--------------------------

Import function from the module:
  >>> MyList = __import__('1-my_list').MyList

appending data to the list:
  >>> mli = MyList()
  >>> mli.append(10)
  >>> mli.append(7)
  >>> mli.append(9)
  >>> mli.append(1)

print the list:
  >>> print(mli)
  [10, 7, 9, 1]

sorting the list:
  >>> mli.print_sorted()
  [1, 7, 9, 10]

check if the list is list:
  >>> isinstance(mli, list)
  True

empty list:
  >>> mli = MyList()
  >>> mli.print_sorted()
  []

print_sorted method called with 2 args:
  >>> mli = MyList()
  >>> mli.print_sorted([4, 3, 1])
  Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
  TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given

Normal list test:
    >>> mli = MyList([2, 10, 1])
    >>> mli.print_sorted()
    [1, 2, 10]

Normal list test 2:
    >>> mli = MyList([1, 4, 2, 3, 5])
    >>> mli.print_sorted()
    [1, 2, 3, 4, 5]

Negative ints list test:
    >>> mli = MyList([-1000, -98, -232565, 0, -23423434, -123])
    >>> mli.print_sorted()
    [-23423434, -232565, -1000, -123, -98, 0]

Original list unchanged:
    >>> mli = MyList([2, 10, 1, -10, 20, 100, 0])
    >>> mli.print_sorted()
    [-10, 0, 1, 2, 10, 20, 100]
    >>> mli
    [2, 10, 1, -10, 20, 100, 0]

List already in order:
    >>> mli = MyList([-10, 0, 1, 2, 10, 20, 100])
    >>> mli.print_sorted()
    [-10, 0, 1, 2, 10, 20, 100]

Test append:
    >>> mli = MyList()
    >>> mli.append(10)
    >>> mli
    [10]
